<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
	<property name="LOG_HOME" value="/home" />
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名-->
			<FileNamePattern>${LOG_HOME}/fdcda.log.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n</pattern>
		</encoder>
		<!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>1000MB</MaxFileSize>
		</triggeringPolicy>
	</appender>

	<!-- 日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
	</root>
</configuration>

<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--&lt;!&ndash; scan扫描配置文件的变化并自动重新配置 &ndash;&gt;-->
<!--<configuration scan="true" scanPeriod="30 seconds" debug="false">-->
	<!--<property resource="conf/conf.properties" />-->
	<!--<property name="LOG_PATH" value="${catalina.base:-.}/logs/${log.dir.name:-backstage}" />-->
	<!--<property name="LOG_BASE" value="${LOG_PATH}/${log.dir.name:-backstage}" />-->
	<!--<property name="CHARSET" value="UTF-8" />-->
	<!--<jmxConfigurator />-->
	<!--<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">-->
		<!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"-->
			<!--charset="${CHARSET}">-->
			<!--<pattern>%-15d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}[%file:%line] -%X{user_} %msg%n %ex{2}</pattern>-->
		<!--</encoder>-->
	<!--</appender>-->
	<!--&lt;!&ndash; RollingFileAppender继承自ch.qos.logback.core.FileAppender &ndash;&gt;-->
	<!--<appender name="common-error" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
		<!--&lt;!&ndash; 限定只输出ERROR级别的日志 &ndash;&gt;-->
		 <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
          	<!--<level>ERROR</level>-->
          	<!--<onMatch>ACCEPT</onMatch>-->
          	<!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
        <!--<File>${LOG_BASE}_error.log</File>-->
		<!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
	    	<!--<fileNamePattern>${LOG_BASE}_error_%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>-->
	    	 <!--&lt;!&ndash; 保留天数 &ndash;&gt;	-->
            <!--<maxHistory>${log.maxHistory:-90}</maxHistory>-->
	    	<!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
	        	<!--<maxFileSize>${log.maxFileSize:-8MB}</maxFileSize>-->
	      	<!--</timeBasedFileNamingAndTriggeringPolicy>-->
	    <!--</rollingPolicy>-->
        <!--<append>true</append> -->
	    <!--<encoder charset="${CHARSET}" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
	      <!--<pattern>%-15d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}[%file:%line] - %msg%n %ex{2}</pattern>-->
	      <!--<charset>${CHARSET}</charset>-->
          <!--<immediateFlush>true</immediateFlush>-->
	    <!--</encoder>-->
    <!--</appender>-->
    <!--<appender name="common-default" class="ch.qos.logback.core.rolling.RollingFileAppender">  -->
        <!--<File>${LOG_BASE}_default.log</File>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
	    	<!--<fileNamePattern>${LOG_BASE}_default.%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
	    	 <!--&lt;!&ndash; 保留天数 &ndash;&gt;	-->
            <!--<maxHistory>${log.maxHistory:-60}</maxHistory>-->
	    	<!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
	        	<!--<maxFileSize>${log.maxFileSize:-8MB}</maxFileSize>-->
	      	<!--</timeBasedFileNamingAndTriggeringPolicy>-->
	    <!--</rollingPolicy>-->
        <!--<append>true</append> -->
	    <!--<encoder charset="${CHARSET}" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
	      <!--<pattern>%-15d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}[%file:%line] - %msg%n %ex{2}</pattern>-->
	       <!--<charset>${CHARSET}</charset>-->
          <!--<immediateFlush>true</immediateFlush>-->
	    <!--</encoder>-->
    <!--</appender>-->
	<!--<appender name="project-dao" class="ch.qos.logback.core.rolling.RollingFileAppender" >  -->
        <!--<filter class="ch.qos.logback.core.filter.EvaluatorFilter">  -->
        	 <!--&lt;!&ndash; 默认为 ch.qos.logback.classic.boolex.JaninoEventEvaluator &ndash;&gt; -->
            <!--<evaluator name="eval_dao">  -->
                <!--<expression>logger.contains(".dao.")</expression>  -->
            <!--</evaluator>-->
             <!--&lt;!&ndash; 如果匹配，则立即处理 &ndash;&gt;-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--&lt;!&ndash; 如果不匹配，则拒绝处理 &ndash;&gt;-->
            <!--<onMismatch>DENY</onMismatch>  -->
            <!--&lt;!&ndash; <OnMismatch>NEUTRAL</OnMismatch>  -->
            <!--<OnMatch>DENY</OnMatch>   &ndash;&gt;-->
        <!--</filter>  -->
        <!--<File>${LOG_BASE}_dao.log</File>  -->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  -->
            <!--<FileNamePattern>${LOG_BASE}_dao.%d{yyyy-MM-dd}.%i.log</FileNamePattern>-->
            <!--&lt;!&ndash; 保留天数 &ndash;&gt;	-->
            <!--<maxHistory>${log.maxHistory:-60}</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 触发策略，通常rollingPolicy与triggeringPolicy联合使用 &ndash;&gt;-->
		<!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
			<!--<MaxFileSize>${log.maxFileSize:-8MB}</MaxFileSize>-->
		<!--</triggeringPolicy>-->
		<!--&lt;!&ndash; HTML文件输出:encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder" pattern class="ch.qos.logback.classic.html.HTMLLayout" &ndash;&gt;-->
        <!--<append>true</append> -->
	    <!--<encoder charset="${CHARSET}" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
	      <!--<pattern>%-15d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}[%file:%line] - %msg%n %ex{2}</pattern>-->
	      <!--<charset>${CHARSET}</charset>-->
          <!--<immediateFlush>true</immediateFlush>-->
	    <!--</encoder>  -->
    <!--</appender>  -->
    <!--<appender name="project-service" class="ch.qos.logback.core.rolling.RollingFileAppender">  -->
        <!--<filter class="ch.qos.logback.core.filter.EvaluatorFilter">  -->
            <!--<evaluator name="eval_service">  -->
                <!--<expression>message.contains(".service.impl")</expression>  -->
            <!--</evaluator>  -->
            <!--<onMatch>ACCEPT</onMatch>  -->
            <!--<onMismatch>DENY</onMismatch>  -->
        <!--</filter>  -->
        <!--<File>${LOG_BASE}_service.log</File>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  -->
            <!--<FileNamePattern>${LOG_BASE}_service.%d{yyyy-MM-dd}.%i.log</FileNamePattern> -->
             <!--&lt;!&ndash; 保留天数 &ndash;&gt;	-->
            <!--<maxHistory>${log.maxHistory:-60}</maxHistory> -->
        <!--</rollingPolicy>  -->
      <!--<append>true</append> -->
	    <!--<encoder charset="${CHARSET}" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
	      <!--<pattern>%-15d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}[%file:%line] - %msg%n %ex{2}</pattern>-->
	      <!--<charset>${CHARSET}</charset>-->
          <!--<immediateFlush>true</immediateFlush>-->
	    <!--</encoder>  -->
    <!--</appender>-->

    <!--&lt;!&ndash; logger的向上传递性属性 additivity默认为true &ndash;&gt;-->
    <!--<logger name="ch.qos.logback.classic" level="WARN"/>-->
    <!--<logger name="java.sql" level="WARN" />  -->
 	<!--<logger name="jdbc" level="WARN"/>-->
 	<!--&lt;!&ndash;-->
 	<!--调试应用程序时，只需设置root的输出级别为debug,设置第三方开源组件(hibernate spring)日志输出级别为ERROR(屏蔽设置为OFF)	-->
 	<!--<logger name="org" level="ERROR"/>-->
 	<!--&ndash;&gt;-->
 	<!--<logger name="org.hibernate" level="INFO"/>-->
	<!--<logger name="org.hibernate.cache" level="ERROR"/>-->
    <!--<logger name="org.hibernate.sql" level="INFO"/>-->
    <!--<logger name="org.hibernate.engine" level="INFO" />-->
    <!--<logger name="org.hibernate.type" level="ERROR"/>-->
	<!--<logger name="org.hibernate.util" level="ERROR"/>-->
	<!--<logger name="org.hibernate.cfg" level="WARN"/>-->
    <!---->
    <!--<logger name="org.springframework" level="INFO"/>-->
    <!--<logger name="org.springframework.web" level="INFO"/>-->
    <!---->
    <!--<logger name="org.apache" level="INFO"/> -->
    <!--<logger name="org.apache.shiro" level="INFO"/>-->
    <!--<logger name="org.apache.mina" level="WARN" />  -->
    <!---->
    <!--&lt;!&ndash; 如果SimpleMappingExceptionResolver的warnLogCategory不为空，spring就会使用apache的org.apache.commons.logging.Log日志工具记录异常，级别是warn。 &ndash;&gt;-->
    <!--<logger name="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" level="WARN"/>-->
    <!---->
    <!--<logger name="com.danga.MemCached" level="INFO" />-->
    <!--<logger name="net.sf.ehcache" level="INFO"/>-->
    <!--<logger name="freemarker" level="INFO"/>-->
   <!---->
    <!--<logger name="org.eclipse.jetty" level="INFO"/>-->
    <!--<logger name="com.opensymphony" level="WARN" />-->
    <!--<logger name="net.sf" level="WARN" />-->
   	<!--&lt;!&ndash;  输出SQL语句  log.druid.sql.Statement.level=INFO &ndash;&gt;-->
	<!--<logger name="druid.sql.Statement" level="DEBUG"/>-->
	<!--&lt;!&ndash; log4jdbc配置，只用在开发环境 &ndash;&gt; -->
	<!--<logger name="jdbc.sqlonly" level="INFO" /> -->
	<!--<logger name="jdbc.sqltiming" level="ERROR" /> -->
	<!--<logger name="jdbc.audit" level="ERROR" /> -->
	<!--<logger name="jdbc.resultset" level="ERROR" /> -->
	<!--<logger name="jdbc.connection" level="ERROR" /> -->
	<!---->
	<!--<root level="INFO">-->
		<!--&lt;!&ndash;将appender添加到root logger下&ndash;&gt;-->
		<!--<appender-ref ref="stdout" />-->
		<!--<appender-ref ref="project-dao" level="ERROR"/>  -->
        <!--<appender-ref ref="project-service" level="INFO"/>-->
        <!--<appender-ref ref="common-error" level="ERROR"/>-->
        <!--<appender-ref ref="common-default" level="DEBUG"/>-->
	<!--</root>-->
	 <!---->
<!--</configuration>-->
